
file {
  store {
    segments {
      # Default segment 
      default = image-origin 
  
      # Original uploaded image
      image-origin {
        content-types = ["image/*"]
        storage-plugin = "file.store.storage.local"
        naming = "origin/{id}.{extension}"

        triggers {
          onUploaded = [image, image_240x240]
        }
      }
      image {
        content-types = ["image/*"]
        storage-plugin = "file.store.storage.local"
        naming = "{id}.{extension}"
      }
      image_240x240 {
        content-types = ["image/*"]
        storage-plugin = "file.store.storage.local"
        naming = "thumbs/240x240/{id}.{extension}"
      }
    }
  
    storage {
      local {
        class   = "jp.o3co.file.store.storage.local.LocalFileStorage"
        base_dir = "file:/tmp/uploaded"
  
        # http-server alias the directory "/uploaded" with following URL
        # or if "base_url" is not specified, then not public
        # base_url is only for when "download-mode" is "redirect"
        public_url = "http://localhost:8181/files/"
      }
      s3 {
        class   = "jp.o3co.file.store.storage.s3.S3FileStorage"
        bucket  = "hoge"
        token   = ""
        secret  = ""
  
        # The S3 bucket public url for the bucket
        public_url = "http://bucket.s3-region.amazonaws.com/"
      }
    }

    # PreDefined filters
    filters {
      "thumb_120x120" {
        class = "jp.o3co.file.processor.filters.image.ImageResizeFilter"
        size  = 240x240
      }
      "thumb_240x240" {
        class = "jp.o3co.file.processor.filters.image.ImageResizeFilter"
        size  = 240x240
      }
    }
  }
}
